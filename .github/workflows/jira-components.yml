# .github/workflows/jira-components.yml
# Sync changed components from a PR → GitHub labels → Jira Components
# Detect-script now emits JSON arrays, so we consume them with fromJSON().

name: Sync components to Jira

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: pr-${{ github.event.pull_request.number }}-jira-components
  cancel-in-progress: true

jobs:
  sync:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      issues: write   # label management

    steps:
      # 1 — Checkout
      - name: 🛎️ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2 — Node & deps
      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: 📥 Install dependencies
        run: npm ci --ignore-scripts

      # 3 — Detect components
      - name: 🔍 Detect components from diff
        id: detect
        run: |
          node scripts/detect-components.js \
            --base "${{ github.event.pull_request.base.sha }}" \
            --head "${{ github.event.pull_request.head.sha }}"

       # 4 — Label PR
      - name: 🏷️ Label PR
        if: steps.detect.outputs.LOCAL_COMPONENTS != '[]'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # ── 🔑 convert ["frontend","ci-cd"] →  "frontend\nci-cd"
          labels: ${{ join(fromJSON(steps.detect.outputs.LOCAL_COMPONENTS), '\n') }}

      # 5 — Push components to Jira
      - name: 🎫 Push components to Jira
        if: steps.detect.outputs.NAMESPACED_COMPONENTS != '[]'
        env:
          JIRA_BASE_URL:    ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL:  ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN:   ${{ secrets.JIRA_API_TOKEN }}
        run: |
          node scripts/set-jira-components.js \
            '${{ steps.detect.outputs.NAMESPACED_COMPONENTS }}' \
            '${{ github.event.pull_request.head.ref }}' \
            '${{ github.event.pull_request.title }}' \
            '${{ github.event.pull_request.body }}'

